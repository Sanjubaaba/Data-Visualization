# Titanic Dataset Analysis 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import StandardScaler
from scipy import stats

# 1. Data Loading and Cleaning
df = pd.read_csv('titanic.csv')

# Handle missing data
df['Age'] = df['Age'].fillna(df['Age'].median())  # Data Imputation
df['Embarked'] = df['Embarked'].fillna('S')  # Handling Missing Data

# 2. Data Transformation and Encoding
df['Sex'] = df['Sex'].map({'male': 0, 'female': 1})  # Data Encoding
df = pd.get_dummies(df, columns=['Embarked'])  # Data Encoding

# 3. Data Normalization
scaler = StandardScaler()
df['Fare_scaled'] = scaler.fit_transform(df[['Fare']])  # Data Scaling

# 4. Descriptive Statistics
print("Mean Age:", np.mean(df['Age']))
print("Survival Rate:", df['Survived'].mean())

# 5. Probability Distribution Visualization
plt.figure(figsize=(10,5))
sns.histplot(df['Age'], kde=True, stat='density')
plt.title('Age Probability Distribution')
plt.show()

# 6. Correlation Analysis
corr = df[['Survived','Pclass','Age','Fare','Sex']].corr()
sns.heatmap(corr, annot=True)
plt.title('Feature Correlation Matrix')
plt.show()

# 7. Regression Analysis
X = df[['Pclass', 'Age', 'Fare', 'Sex']]
y = df['Survived']
model = LogisticRegression()
model.fit(X, y)
print("Model Accuracy:", model.score(X, y))

# 8. Statistical Inference (t-test)
survived_age = df[df['Survived']==1]['Age']
not_survived_age = df[df['Survived']==0]['Age']
t_stat, p_val = stats.ttest_ind(survived_age, not_survived_age)
print(f"T-test p-value: {p_val:.4f}")

# 9. Analysis of Variance (ANOVA)
class1 = df[df['Pclass']==1]['Fare']
class2 = df[df['Pclass']==2]['Fare']
class3 = df[df['Pclass']==3]['Fare']
f_stat, p_val = stats.f_oneway(class1, class2, class3)
print(f"ANOVA p-value: {p_val:.4f}")

# 10. Machine Learning Feature Importance
importance = pd.DataFrame({
    'Feature': X.columns,
    'Importance': model.coef_[0]
}).sort_values('Importance', ascending=False)
print("\nFeature Importance:\n", importance)

# 11. Final Visualization
plt.figure(figsize=(12,6))
sns.boxplot(x='Pclass', y='Age', hue='Survived', data=df)
plt.title('Survival Analysis by Class and Age')
plt.show()
